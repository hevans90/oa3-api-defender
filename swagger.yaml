openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/tengroup/tenplatform-api/0.0.2
info:
  description: This is the V3 API specification
  version: "0.0.2"
  title: Ten Platform API
tags:
  - name: member
    description: Functionality related to a member
  - name: user
    description: Functionality related to a user
paths:
  /user/authenticate:
    post:
      tags:
        - user
      summary: authenticate a user with username and password
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: 'user@email.com'
                password:
                  type: string
                  example: 'SuperSweetPassword123!'
      responses:
        '200':
          description: whether user is authenticated or not
          content:
            application/json:
              schema:
                type: object
                required:
                  - user
                  - token
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
                    example: 'JWT 12341324-234324-2342'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '422':
          $ref: '#/components/responses/ErrorResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /user/logout:
    delete:
      security:
      - jwtAuth: []
      tags:
        - user
      summary: logout currently logged in user
      responses:
        '204':
          description: successful logout
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '422':
          $ref: '#/components/responses/ErrorResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /member/eligibility:
    get:
      tags:
        - member
      summary: eligibility check
      operationId: eligibilityCheck
      description: |
        By passing in an eligibility type and value, you can check whether a user is eligible for registration
      parameters:
        - in: query
          name: identifierType
          description: type of eligibility check
          required: true
          schema:
            type: string
            enum: [cardNumber, phoneNumber]
          example: 'cardNumber'

        - in: query
          name: identifierValue
          description: value of eligibility check
          required: true
          schema:
            type: string
          example: '98723498792'

      responses:
        '200':
          description: eligibility check passed
          content:
            application/json:
              schema:
                type: object
                required:
                  - isEligible
                  - extremelyRequiredProperty
                properties:
                  isEligible:
                    type: string
                  extremelyRequiredProperty:
                    type: boolean
                additionalProperties: false

        '422':
          $ref: '#/components/responses/ErrorResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    ErrorResponse:
      description: Error response with arrays of ApiGenericErrors and ApiValidationErrors
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ApiGenericError'
              validationErrors:
                type: array
                items:
                  $ref: '#/components/schemas/ApiValidationError'

  schemas:
    User:
      required:
        - username
        - memberId
      properties:
        username:
          type: string
          example: 'user@email.com'
        memberId:
          type: string
          example: '123123-123'

    ApiGenericError:
      required:
        - code
        - message
        - displayMessage
      properties:
        code:
          type: string
          example: error code
        message:
          type: string
          example: human readable message
        displayMessage:
          type: string
          example: localized error that can be shown to users

    ApiValidationError:
      allOf:
        - $ref: '#/components/schemas/ApiGenericError'
      required:
        - fieldName
      properties:
        fieldName:
          type: string
          example: the name of the input field affected
